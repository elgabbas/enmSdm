% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/randPointsRespectingSelfOther2.r
\name{randPointsRespectingSelfOther2}
\alias{randPointsRespectingSelfOther2}
\title{Randomizes the location of two sets of geographic points while respecting spatial autocorrelation}
\usage{
randPointsRespectingSelfOther2(x1, x2, rast, tol1 = NULL, tol2 = NULL,
  tol12 = NULL, distFunct = NULL, restrict = TRUE,
  keepData = FALSE, verbose = FALSE, ...)
}
\arguments{
\item{x1}{Matrix, data frame, SpatialPoints, or SpatialPointsDataFrame object. If this is a matrix or data frame, the first two columns must represent longitude and latitude (in that order). If \code{x} is a matrix or data frame, the coordinates are assumed to be unprojected (WGS84) (a coordinate reference system proj4 string or \code{CRS} object can be passed into the function using \code{...}). If \code{x} is a SpatialPoints or SpatialPointsDataFrame and not in WGS84 or NAD83, then coordinates are projected to WGS84 (with a warning).}

\item{x2}{As \code{x1}.}

\item{rast}{Raster, RasterStack, or RasterBrick used to locate presences randomly. If this is a RasterStack or a RasterBrick then the first layer will be used (i.e., so cells with \code{NA} will not have points located within them).}

\item{tol1}{Numeric >0, maximum root-mean-square distance allowed between the set of observed pairwise distances between points in \code{x1} and the set of randomized pairwise distances between points simulating \code{x1}. The algorithm will shuffle points until the calculated difference is <= this number. Units are the same as units used by the coordinate reference system of \code{x} (usually meters).}

\item{tol2}{As \code{tol1} but for \code{x2}.}

\item{tol12}{As \code{tol1} but for the root-mean-square deviation between points in \code{x1} and \code{x2}.}

\item{distFunct}{Either a function or \code{NULL}. If \code{NULL} then \code{\link[geosphere]{distGeo}} is used to calculate distances.  Other "dist" functions (e.g., \code{\link[geosphere]{distGeo}}) can be used.  Alternatively, a custom function can be used so long as its first argument is a 2-column numeric matrix with one row for the x- and y-coordinates of a single point and its second argument is a two-column numeric matrix with one or more rows of other points.}

\item{keepData}{Logical, if \code{TRUE} then the original data in \code{x1} and \code{x1} (i.e., columns that do not represent coordinates) will be retained in the output but the coordinates will be shuffled. If \code{FALSE} (default) then the returned values will have just shuffled coordinates.}

\item{verbose}{Logical, if \code{FALSE} (default) show no progress indicator. If \code{TRUE} then display updates and graph.}

\item{...}{Arguments to pass to \code{distGeo} or \code{\link[enmSdm]{sampleRast}}. Note that if \code{x} is a matrix or data frame a coordinate reference system may be passed using \code{crs = <proj4 string code>} or \code{crs = <object of class CRS>} (see \pkg{sp} package). Otherwise the coordinates are assumed to be unprojected (WGS84).}
}
\value{
A list with two elements, each representing object of the same classes as \code{x1} and \code{x2} but with coordinates randomized.
}
\description{
This function randomizes the location of two sets of geographic points with respect to one another retaining (more or less) the same distribution of pairwise distances between points with and between sets (plus or minus a user-defined tolerance).
}
\seealso{
\code{\link[enmSdm]{randPointsRespectingSelf}}, \code{\link[enmSdm]{randPointsRespectingSelfOther1}}, \code{\link[enmSdm]{randPointsBatch}}, \code{\link[enmSdm]{randPointsBatchSampled}}, \code{\link[enmSdm]{randPointsBatchExtract}}, \code{\link[enmSdm]{randPointsBatchNicheOverlap}}
}
